strict digraph  {
"tensorflow::TensorListScatter::Compute";
"tensorflow::TensorShapeRep::DebugString";
"tensorflow::TensorShapeBase::dim_size";
"tensorflow::Tensor::dtype";
"tensorflow::Tensor::flat";
"tensorflow::Tensor::CheckTypeAndIsAligned";
"tensorflow::Tensor::dims";
"tensorflow::Tensor::NumElements";
"xla::runtime::InvalidArgument";
"tensorflow::PartialTensorShape::IsCompatibleWith";
"tensorflow::TensorShapeUtils::IsMatrixOrHigher";
"tensorflow::TensorShapeUtils::IsScalar";
"tensorflow::TensorShapeUtils::IsVectorOrHigher";
"num_elements";
"tensorflow::TensorShapeBase::RemoveDim";
"tensorflow::Tensor::scalar";
"tensorflow::Tensor::CheckIsAlignedAndSingleElement";
"tensorflow::Tensor::IsAligned";
"tensorflow::Tensor::shape";
"tensorflow::TensorList::tensors";
"tensorflow::TensorShapeFromTensor";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeRep::DebugString";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeBase::dim_size";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::Tensor::dtype";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::Tensor::flat";
"tensorflow::TensorListScatter::Compute" -> "xla::runtime::InvalidArgument";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::PartialTensorShape::IsCompatibleWith";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeUtils::IsMatrixOrHigher";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeUtils::IsScalar";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeUtils::IsVectorOrHigher";
"tensorflow::TensorListScatter::Compute" -> "num_elements";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::Tensor::NumElements";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeBase::RemoveDim";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::Tensor::scalar";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::Tensor::shape";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorList::tensors";
"tensorflow::TensorListScatter::Compute" -> "tensorflow::TensorShapeFromTensor";
"tensorflow::Tensor::flat" -> "tensorflow::Tensor::CheckTypeAndIsAligned";
"tensorflow::Tensor::flat" -> "tensorflow::Tensor::dims";
"tensorflow::Tensor::flat" -> "tensorflow::Tensor::NumElements";
"tensorflow::Tensor::scalar" -> "tensorflow::Tensor::CheckIsAlignedAndSingleElement";
"tensorflow::Tensor::CheckIsAlignedAndSingleElement" -> "tensorflow::Tensor::IsAligned";
"tensorflow::Tensor::CheckIsAlignedAndSingleElement" -> "tensorflow::Tensor::NumElements";
}
