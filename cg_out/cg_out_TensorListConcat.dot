strict digraph  {
edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
node [fontname="Helvetica",fontsize="10",shape=record];
rankdir="LR";
"tensorflow::TensorListConcat::Compute";
"tensorflow::PartialTensorShape::AsTensorShape";
"tensorflow::TensorShapeBase\< PartialTensorShape \>::IsFullyDefined";
"rep";
"tensorflow::DataTypeString";
"tensorflow::anonymous_namespace\{types::cc\}::DataTypeStringInternal";
"tensorflow::IsRefType";
"absl::StrCat";
"absl::Append";
"result";
"absl::strings_internal::STLStringResizeUninitialized";
"tensorflow::TensorShapeRep::DebugString";
"absl::str_format_internal::anonymous_namespace\{convert_test::cc\}::StrAppend";
"tensorflow::TensorShapeBase::dim_size";
"tensorflow::TensorShapeBase::dim_sizes";
"tensorflow::TensorShapeBase::dims";
"tensorflow::Tensor::dtype";
"tensorflow::GetElementShapeFromInput";
"tensorflow::PartialTensorShape::MergeWith";
"tensorflow::TensorShapeBase\< PartialTensorShape \>::dim_size";
"tensorflow::TensorShapeBase\< PartialTensorShape \>::dims";
"xla::Internal";
"absl::time_internal::cctz::detail::format";
"Xbyak::util::al";
"Xbyak::util::bp";
"absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::Format02d";
"absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::Format64";
"absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::FormatOffset";
"absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::FormatTM";
"Xbyak::util::fs";
"absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::ParseInt";
"absl::ToTM";
"absl::time_internal::cctz::ToUnixSeconds";
"absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::ToWeek";
"tsl::errors::Internal";
"absl::StrFormat";
"absl::str_format_internal::UntypedFormatSpecImpl::Extract";
"absl::str_format_internal::FormatPack";
"absl::str_format_internal::FormatUntyped";
"absl::str_format_internal::anonymous_namespace\{bind::cc\}::ConvertAll";
"xla::WithLogBacktrace";
"xla::runtime::InvalidArgument";
"absl::InvalidArgumentError";
"tensorflow::OkStatus";
"tensorflow::TensorShapeBase\< PartialTensorShape \>::unknown_rank";
"tensorflow::TensorShapeFromTensor";
"tensorflow::PartialTensorShape::MakePartialShape";
"tensorflow::TF_RETURN_IF_ERROR";
"tensorflow::GetInputList";
"tensorflow::Variant::DebugString";
"tensorflow::Variant::SummarizeValue";
"tensorflow::Variant::TypeName";
"tensorflow::Variant::get";
"tensorflow::TensorShapeUtils::IsScalar";
"tensorflow::TensorShapeBase::InsertDim";
"tensorflow::IsPluggableDevice";
"tensorflow::TensorShapeUtils::IsVectorOrHigher";
"tflite::gpu::NumElements";
"tensorflow::Tensor::NumElements";
"tensorflow::TensorShapeBase::RemoveDim";
"tensorflow::TensorShapeBase::set_dim";
"tensorflow::Tensor::shaped";
"tensorflow::Tensor::CheckTypeAndIsAligned";
"tensorflow::Tensor::IsAligned";
"ptr";
"mlir::presburger::mod";
"mlir::presburger::MPInt::getSmall";
"mlir::presburger::MPInt::isSmall";
"tensorflow::Tensor::dims";
"tensorflow::Tensor::FillDimsAndValidateCompatibleShape";
"absl::Span::subspan";
"tensorflow::TensorList::tensors";
"tensorflow::TensorShape";
"tensorflow::Tensor::vec";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::PartialTensorShape::AsTensorShape";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::DataTypeString";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeRep::DebugString";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase::dim_size";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase::dim_sizes";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase::dims";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::Tensor::dtype";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::GetElementShapeFromInput";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::GetInputList";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase::InsertDim";
"tensorflow::TensorListConcat::Compute" -> "xla::runtime::InvalidArgument";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase\< PartialTensorShape \>::IsFullyDefined";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::IsPluggableDevice";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeUtils::IsVectorOrHigher";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::PartialTensorShape::MergeWith";
"tensorflow::TensorListConcat::Compute" -> "tflite::gpu::NumElements";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::Tensor::NumElements";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase::RemoveDim";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase::set_dim";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::Tensor::shaped";
"tensorflow::TensorListConcat::Compute" -> "absl::Span::subspan";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorList::tensors";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShape";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::TensorShapeBase\< PartialTensorShape \>::unknown_rank";
"tensorflow::TensorListConcat::Compute" -> "tensorflow::Tensor::vec";
"tensorflow::PartialTensorShape::AsTensorShape" -> "tensorflow::TensorShapeBase\< PartialTensorShape \>::IsFullyDefined";
"tensorflow::PartialTensorShape::AsTensorShape" -> "rep";
"tensorflow::DataTypeString" -> "tensorflow::anonymous_namespace\{types::cc\}::DataTypeStringInternal";
"tensorflow::DataTypeString" -> "tensorflow::IsRefType";
"tensorflow::DataTypeString" -> "absl::StrCat";
"absl::StrCat" -> "absl::Append";
"absl::StrCat" -> "result";
"absl::StrCat" -> "absl::strings_internal::STLStringResizeUninitialized";
"tensorflow::TensorShapeRep::DebugString" -> "absl::str_format_internal::anonymous_namespace\{convert_test::cc\}::StrAppend";
"tensorflow::GetElementShapeFromInput" -> "tensorflow::PartialTensorShape::MergeWith";
"tensorflow::GetElementShapeFromInput" -> "tensorflow::OkStatus";
"tensorflow::GetElementShapeFromInput" -> "tensorflow::TensorShapeFromTensor";
"tensorflow::GetElementShapeFromInput" -> "tensorflow::TF_RETURN_IF_ERROR";
"tensorflow::PartialTensorShape::MergeWith" -> "tensorflow::TensorShapeRep::DebugString";
"tensorflow::PartialTensorShape::MergeWith" -> "tensorflow::TensorShapeBase\< PartialTensorShape \>::dim_size";
"tensorflow::PartialTensorShape::MergeWith" -> "tensorflow::TensorShapeBase\< PartialTensorShape \>::dims";
"tensorflow::PartialTensorShape::MergeWith" -> "xla::Internal";
"tensorflow::PartialTensorShape::MergeWith" -> "xla::runtime::InvalidArgument";
"tensorflow::PartialTensorShape::MergeWith" -> "tensorflow::OkStatus";
"tensorflow::PartialTensorShape::MergeWith" -> "result";
"tensorflow::PartialTensorShape::MergeWith" -> "tensorflow::TensorShapeBase\< PartialTensorShape \>::unknown_rank";
"xla::Internal" -> "absl::time_internal::cctz::detail::format";
"xla::Internal" -> "tsl::errors::Internal";
"xla::Internal" -> "absl::StrFormat";
"xla::Internal" -> "xla::WithLogBacktrace";
"absl::time_internal::cctz::detail::format" -> "Xbyak::util::al";
"absl::time_internal::cctz::detail::format" -> "Xbyak::util::bp";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::Format02d";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::Format64";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::FormatOffset";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::FormatTM";
"absl::time_internal::cctz::detail::format" -> "Xbyak::util::fs";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::ParseInt";
"absl::time_internal::cctz::detail::format" -> "result";
"absl::time_internal::cctz::detail::format" -> "absl::ToTM";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::ToUnixSeconds";
"absl::time_internal::cctz::detail::format" -> "absl::time_internal::cctz::detail::anonymous_namespace\{time_zone_format::cc\}::ToWeek";
"absl::StrFormat" -> "absl::str_format_internal::UntypedFormatSpecImpl::Extract";
"absl::StrFormat" -> "absl::time_internal::cctz::detail::format";
"absl::StrFormat" -> "absl::str_format_internal::FormatPack";
"absl::str_format_internal::FormatPack" -> "absl::time_internal::cctz::detail::format";
"absl::str_format_internal::FormatPack" -> "absl::str_format_internal::FormatUntyped";
"absl::str_format_internal::FormatUntyped" -> "absl::str_format_internal::anonymous_namespace\{bind::cc\}::ConvertAll";
"absl::str_format_internal::FormatUntyped" -> "absl::time_internal::cctz::detail::format";
"xla::runtime::InvalidArgument" -> "absl::time_internal::cctz::detail::format";
"xla::runtime::InvalidArgument" -> "absl::InvalidArgumentError";
"xla::runtime::InvalidArgument" -> "absl::StrFormat";
"tensorflow::TensorShapeFromTensor" -> "tensorflow::DataTypeString";
"tensorflow::TensorShapeFromTensor" -> "xla::runtime::InvalidArgument";
"tensorflow::TensorShapeFromTensor" -> "tensorflow::PartialTensorShape::MakePartialShape";
"tensorflow::TensorShapeFromTensor" -> "tensorflow::OkStatus";
"tensorflow::GetInputList" -> "tensorflow::Variant::DebugString";
"tensorflow::GetInputList" -> "tensorflow::Variant::get";
"tensorflow::GetInputList" -> "xla::runtime::InvalidArgument";
"tensorflow::GetInputList" -> "tensorflow::TensorShapeUtils::IsScalar";
"tensorflow::GetInputList" -> "tensorflow::OkStatus";
"tensorflow::Variant::DebugString" -> "absl::StrCat";
"tensorflow::Variant::DebugString" -> "tensorflow::Variant::SummarizeValue";
"tensorflow::Variant::DebugString" -> "tensorflow::Variant::TypeName";
"tensorflow::Tensor::shaped" -> "tensorflow::Tensor::CheckTypeAndIsAligned";
"tensorflow::Tensor::shaped" -> "tensorflow::Tensor::dims";
"tensorflow::Tensor::shaped" -> "tensorflow::Tensor::FillDimsAndValidateCompatibleShape";
"tensorflow::Tensor::CheckTypeAndIsAligned" -> "tensorflow::DataTypeString";
"tensorflow::Tensor::CheckTypeAndIsAligned" -> "tensorflow::Tensor::dtype";
"tensorflow::Tensor::CheckTypeAndIsAligned" -> "tensorflow::Tensor::IsAligned";
"tensorflow::Tensor::IsAligned" -> "tensorflow::Tensor::dtype";
"tensorflow::Tensor::IsAligned" -> "tensorflow::Tensor::NumElements";
"tensorflow::Tensor::IsAligned" -> "ptr";
"ptr" -> "mlir::presburger::mod";
"mlir::presburger::mod" -> "mlir::presburger::MPInt::getSmall";
"mlir::presburger::mod" -> "mlir::presburger::MPInt::isSmall";
}
